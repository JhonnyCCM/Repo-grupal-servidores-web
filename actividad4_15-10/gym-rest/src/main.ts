import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { ValidationPipe } from '@nestjs/common';
import * as dotenv from 'dotenv';

// Cargar variables de entorno
dotenv.config();

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // Habilitar validaci√≥n global
  app.useGlobalPipes(new ValidationPipe({
    transform: true,
    whitelist: true,
    forbidNonWhitelisted: true,
  }));

  // Configurar CORS con origen desde variables de entorno
  const corsOrigins = process.env.CORS_ORIGIN?.split(',') || ['http://localhost:3000'];
  app.enableCors({
    origin: corsOrigins,
    credentials: true,
  });

  // Configuraci√≥n de Swagger usando variables de entorno
  const config = new DocumentBuilder()
    .setTitle(process.env.SWAGGER_TITLE || 'Gym API')
    .setDescription(process.env.SWAGGER_DESCRIPTION || 'API REST para gesti√≥n de gimnasio')
    .setVersion(process.env.SWAGGER_VERSION || '1.0')
    .addTag('coaches', 'Operaciones relacionadas con entrenadores')
    .addTag('equipments', 'Operaciones relacionadas con equipos')
    .addTag('gym-classes', 'Operaciones relacionadas con clases de gimnasio')
    .addTag('users', 'Operaciones relacionadas con usuarios')
    .addTag('plans', 'Operaciones relacionadas con planes de membres√≠a')
    .addTag('memberships', 'Operaciones relacionadas con membres√≠as')
    .addTag('payments', 'Operaciones relacionadas con pagos')
    .addTag('categories', 'Operaciones relacionadas con categor√≠as')
    .addTag('rooms', 'Operaciones relacionadas con salones')
    .addTag('schedules', 'Operaciones relacionadas con horarios')
    .addTag('gym-class-categories', 'Operaciones relacionadas con asociaciones clase-categor√≠a')
    .addTag('equipment-categories', 'Operaciones relacionadas con asociaciones equipo-categor√≠a')
    .addTag('class-enrollments', 'Operaciones relacionadas con inscripciones a clases')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document);

  const port = parseInt(process.env.PORT || '3001', 10);
  await app.listen(port);

  console.log(`üöÄ Application is running on: http://localhost:${port}`);
  console.log(`üìö Swagger documentation available at: http://localhost:${port}/api`);
  console.log(`üåç Environment: ${process.env.NODE_ENV || 'development'}`);
}
bootstrap();
